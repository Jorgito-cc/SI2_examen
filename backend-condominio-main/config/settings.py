"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os
from decouple import config 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jd2j!#gjrksnf0!jaung)qmz6afroq#im4y_&tf&4qemjesl07'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "backend-condominio-production.up.railway.app",  # dominio de Railway
    "localhost",   # para pruebas locales
    "127.0.0.1",   # loopback
]




# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework_simplejwt.token_blacklist",  # üëà necesario para logout    
    'rest_framework',
    'django_filters',
    'django.contrib.postgres',

    'corsheaders',
    "django_extensions",
    "authx",
    "unidades",
    "residentes",
    "vehiculos",
    "accesos",
    "amenities",
    "finanzas",
    "notificaciones",
    "mantenimiento",
    "vision",
    "auditoria",
    

]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Umbral de similitud coseno para match (0.0 a 1.0). Empieza en 0.45‚Äì0.55
FACE_THRESHOLD = float(os.getenv("FACE_THRESHOLD", "0.50"))







MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

# CORS: ajusta seg√∫n tu web/m√≥vil
CORS_ALLOWED_ORIGINS = [
    "https://smart-platform.netlify.app",   # React
    "http://localhost:5173", 
    #"http://127.0.0.1:5173",
    # Agrega http://<tu-ip-lan>:<puerto> si Flutter se conecta desde dispositivo f√≠sico
]
CORS_ALLOW_CREDENTIALS = True

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],

}
AUTH_USER_MODEL = "authx.Usuario"  # usa el nombre real de tu app


# Email ‚Äúde desarrollo‚Äù: imprime en consola
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
#DEFAULT_FROM_EMAIL = "no-reply@condo.local"
EMAIL_HOST = 'smtp.gmail.com' # Si usas Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config("EMAIL")
EMAIL_HOST_PASSWORD = config("EMAIL_PASSWORD")
DEFAULT_FROM_EMAIL = config("EMAIL")

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases



DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": config("DB_NAME"),
        "USER": config("DB_USER"),
        "PASSWORD": config("DB_PASSWORD"),
        "HOST": config("DB_HOST"),
        "PORT": config("DB_PORT"),
    }
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),   # antes 5 min, ahora 60 min
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),      # antes 1 d√≠a, ahora 7 d√≠as
    "ROTATE_REFRESH_TOKENS": True,                    # genera nuevo refresh token al usar uno
    "BLACKLIST_AFTER_ROTATION": True,                 # invalida el antiguo refresh token
    "ALGORITHM": "HS256",
    "AUTH_HEADER_TYPES": ("Bearer",),
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'